apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: monitoring
data:
  fluent.conf: |
    # Collect logs from all containers
    <source>
      @type tail
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type json
        time_key time
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      </parse>
    </source>

    # Extract performance metrics from logs
    <filter kubernetes.**>
      @type parser
      key_name log
      reserve_data true
      <parse>
        @type regexp
        expression /duration=(?<request_duration>\d+(\.\d+)?)|error="(?<error_message>.+?)"/
      </parse>
    </filter>

    # Extract error metrics
    <filter kubernetes.**>
      @type parser
      key_name log
      reserve_data true
      <parse>
        @type regexp
        expression /status=(?<status>\d{3})/
      </parse>
    </filter>

    # Output to Prometheus via the Prometheus Fluent Plugin
    <match kubernetes.**>
      @type prometheus

      # Error metrics
      <metric>
        name error_count_total
        type counter
        desc Number of errors
        <labels>
          status ${status}
          error ${error_message}
        </labels>
      </metric>

      # Request duration metrics
      <metric>
        name request_count_total
        type counter
        desc Number of requests
        <labels>
          status ${status}
        </labels>
      </metric>
      <metric>
        name log_based_request_duration_seconds
        type histogram
        desc Request duration based on log parsing
        key request_duration
        buckets 0.1,0.3,0.5,0.7,1,3,5,7,10
      </metric>
    </match>

    # Output logs to Elasticsearch
    <match kubernetes.**>
      @type elasticsearch
      host elasticsearch-client
      port 9200
      logstash_format true
      logstash_prefix k8s-logs
      <buffer>
        @type file
        path /var/log/fluentd-buffers/kubernetes.system.buffer
        flush_mode interval
        retry_type exponential_backoff
        flush_thread_count 2
        flush_interval 5s
        retry_forever false
        retry_max_interval 30
        chunk_limit_size 2M
        queue_limit_length 8
        overflow_action block
      </buffer>
    </match>