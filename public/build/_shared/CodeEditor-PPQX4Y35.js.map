{
  "version": 3,
  "sources": ["../../../app/components/editor/CodeEditor.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/editor/CodeEditor.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/editor/CodeEditor.tsx\");\n  import.meta.hot.lastModified = \"1738207474424.236\";\n}\n// REMIX HMR END\n\nimport React from 'react';\nimport { useStore } from '@nanostores/react';\nimport { editorStore } from '~/lib/stores/editor';\nconst CodeEditor = () => {\n  _s();\n  const editor = useStore(editorStore);\n  return <div className=\"w-full h-full flex flex-col\">\n      <div className=\"flex-1 relative\">\n        <div className=\"absolute inset-0 overflow-auto\">\n          <pre className=\"p-4 font-mono text-sm\">\n            {editor.content}\n          </pre>\n        </div>\n      </div>\n      <div className=\"border-t border-gray-200 p-2 flex justify-between items-center\">\n        <div className=\"text-sm text-gray-600\">\n          {editor.language} \u2022 {editor.path}\n        </div>\n        <div className=\"flex gap-2\">\n          <button className=\"px-3 py-1 text-sm bg-blue-500 text-white rounded hover:bg-blue-600\" onClick={() => editor.save()}>\n            Save\n          </button>\n        </div>\n      </div>\n    </div>;\n};\n_s(CodeEditor, \"WTwxSOi8DxqGK/VTVRr3/fnwJv4=\", false, function () {\n  return [useStore];\n});\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AA8BU;AA7BV,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,2CAA6C,EAAE;AAAA,EACxF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAsC;AACtC,cAAY,IAAI,eAAe;AACjC;AAMA,IAAM,aAAa,MAAM;AACvB,KAAG;AACH,QAAM,SAAS,SAAS,WAAW;AACnC,SAAO,mDAAC,SAAI,WAAU,+BAClB;AAAA,uDAAC,SAAI,WAAU,mBACb,6DAAC,SAAI,WAAU,kCACb,6DAAC,SAAI,WAAU,yBACZ,iBAAO,WADV;AAAA;AAAA;AAAA;AAAA,WAEA,KAHF;AAAA;AAAA;AAAA;AAAA,WAIA,KALF;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,IACA,mDAAC,SAAI,WAAU,kEACb;AAAA,yDAAC,SAAI,WAAU,yBACZ;AAAA,eAAO;AAAA,QAAS;AAAA,QAAI,OAAO;AAAA,WAD9B;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,SAAI,WAAU,cACb,6DAAC,YAAO,WAAU,sEAAqE,SAAS,MAAM,OAAO,KAAK,GAAG,oBAArH;AAAA;AAAA;AAAA;AAAA,aAEA,KAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,SARF;AAAA;AAAA;AAAA;AAAA,WASA;AAAA,OAjBG;AAAA;AAAA;AAAA;AAAA,SAkBL;AACJ;AACA,GAAG,YAAY,gCAAgC,OAAO,WAAY;AAChE,SAAO,CAAC,QAAQ;AAClB,CAAC;AACD,KAAK;AACL,IAAO,qBAAQ;AACf,IAAI;AACJ,aAAa,IAAI,YAAY;AAE7B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
