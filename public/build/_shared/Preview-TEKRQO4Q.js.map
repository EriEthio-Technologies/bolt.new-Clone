{
  "version": 3,
  "sources": ["../../../app/components/workbench/Preview.tsx", "../../../app/components/ui/IconButton.tsx", "../../../app/utils/classNames.ts", "../../../app/lib/runtime/action-runner.ts", "../../../node_modules/@webcontainer/api/dist/internal/constants.js", "../../../node_modules/@webcontainer/api/dist/internal/TypedEventTarget.js", "../../../node_modules/@webcontainer/api/dist/internal/tokens.js", "../../../node_modules/@webcontainer/api/dist/internal/iframe-url.js", "../../../node_modules/@webcontainer/api/dist/internal/reset-promise.js", "../../../node_modules/@webcontainer/api/dist/internal/auth-state.js", "../../../node_modules/@webcontainer/api/dist/preview-message-types.js", "../../../node_modules/@webcontainer/api/dist/vendor/index.js", "../../../node_modules/@webcontainer/api/dist/utils/is-preview-message.js", "../../../node_modules/@webcontainer/api/dist/utils/null-prototype.js", "../../../node_modules/@webcontainer/api/dist/utils/file-system.js", "../../../node_modules/@webcontainer/api/dist/index.js", "../../../app/lib/webcontainer/index.ts", "../../../app/lib/stores/previews.ts", "../../../app/utils/promises.ts", "../../../app/utils/shell.ts", "../../../app/utils/terminal.ts", "../../../app/lib/stores/terminal.ts", "../../../app/lib/stores/workbench.ts", "../../../app/components/workbench/PortDropdown.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/workbench/Preview.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/workbench/Preview.tsx\");\n  import.meta.hot.lastModified = \"1738201800711.2502\";\n}\n// REMIX HMR END\n\nimport { useStore } from '@nanostores/react';\nimport { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { IconButton } from '~/components/ui/IconButton';\nimport { workbenchStore } from '~/lib/stores/workbench';\nimport { PortDropdown } from './PortDropdown';\nexport const Preview = _s(memo(_c = _s(() => {\n  _s();\n  const iframeRef = useRef(null);\n  const inputRef = useRef(null);\n  const [activePreviewIndex, setActivePreviewIndex] = useState(0);\n  const [isPortDropdownOpen, setIsPortDropdownOpen] = useState(false);\n  const hasSelectedPreview = useRef(false);\n  const previews = useStore(workbenchStore.previews);\n  const activePreview = previews[activePreviewIndex];\n  const [url, setUrl] = useState('');\n  const [iframeUrl, setIframeUrl] = useState();\n  useEffect(() => {\n    if (!activePreview) {\n      setUrl('');\n      setIframeUrl(undefined);\n      return;\n    }\n    const {\n      baseUrl\n    } = activePreview;\n    setUrl(baseUrl);\n    setIframeUrl(baseUrl);\n  }, [activePreview, iframeUrl]);\n  const validateUrl = useCallback(value => {\n    if (!activePreview) {\n      return false;\n    }\n    const {\n      baseUrl\n    } = activePreview;\n    if (value === baseUrl) {\n      return true;\n    } else if (value.startsWith(baseUrl)) {\n      return ['/', '?', '#'].includes(value.charAt(baseUrl.length));\n    }\n    return false;\n  }, [activePreview]);\n  const findMinPortIndex = useCallback((minIndex, preview, index, array) => {\n    return preview.port < array[minIndex].port ? index : minIndex;\n  }, []);\n\n  // when previews change, display the lowest port if user hasn't selected a preview\n  useEffect(() => {\n    if (previews.length > 1 && !hasSelectedPreview.current) {\n      const minPortIndex = previews.reduce(findMinPortIndex, 0);\n      setActivePreviewIndex(minPortIndex);\n    }\n  }, [previews]);\n  const reloadPreview = () => {\n    if (iframeRef.current) {\n      iframeRef.current.src = iframeRef.current.src;\n    }\n  };\n  return <div className=\"w-full h-full flex flex-col\">\n      {isPortDropdownOpen && <div className=\"z-iframe-overlay w-full h-full absolute\" onClick={() => setIsPortDropdownOpen(false)} />}\n      <div className=\"bg-gobezeai-elements-background-depth-2 p-2 flex items-center gap-1.5\">\n        <IconButton icon=\"i-ph:arrow-clockwise\" onClick={reloadPreview} />\n        <div className=\"flex items-center gap-1 flex-grow bg-gobezeai-elements-preview-addressBar-background border border-gobezeai-elements-borderColor text-gobezeai-elements-preview-addressBar-text rounded-full px-3 py-1 text-sm hover:bg-gobezeai-elements-preview-addressBar-backgroundHover hover:focus-within:bg-gobezeai-elements-preview-addressBar-backgroundActive focus-within:bg-gobezeai-elements-preview-addressBar-backgroundActive\n        focus-within-border-gobezeai-elements-borderColorActive focus-within:text-gobezeai-elements-preview-addressBar-textActive\">\n          <input ref={inputRef} className=\"w-full bg-transparent outline-none\" type=\"text\" value={url} onChange={event => {\n          setUrl(event.target.value);\n        }} onKeyDown={event => {\n          if (event.key === 'Enter' && validateUrl(url)) {\n            setIframeUrl(url);\n            if (inputRef.current) {\n              inputRef.current.blur();\n            }\n          }\n        }} />\n        </div>\n        {previews.length > 1 && <PortDropdown activePreviewIndex={activePreviewIndex} setActivePreviewIndex={setActivePreviewIndex} isDropdownOpen={isPortDropdownOpen} setHasSelectedPreview={value => hasSelectedPreview.current = value} setIsDropdownOpen={setIsPortDropdownOpen} previews={previews} />}\n      </div>\n      <div className=\"flex-1 border-t border-gobezeai-elements-borderColor\">\n        {activePreview ? <iframe ref={iframeRef} className=\"border-none w-full h-full bg-white\" src={iframeUrl} /> : <div className=\"flex w-full h-full justify-center items-center bg-white\">No preview available</div>}\n      </div>\n    </div>;\n}, \"KPc+AXRJmC5LZAbeVusVSZ+btZk=\", false, function () {\n  return [useStore];\n})), \"KPc+AXRJmC5LZAbeVusVSZ+btZk=\", false, function () {\n  return [useStore];\n});\n_c2 = Preview;\nvar _c, _c2;\n$RefreshReg$(_c, \"Preview$memo\");\n$RefreshReg$(_c2, \"Preview\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ui/IconButton.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ui/IconButton.tsx\");\n  import.meta.hot.lastModified = \"1738203238265.6326\";\n}\n// REMIX HMR END\n\nimport { memo } from 'react';\nimport { classNames } from '~/utils/classNames';\nexport const IconButton = memo(_c = ({\n  icon,\n  size = 'xl',\n  className,\n  iconClassName,\n  disabledClassName,\n  disabled = false,\n  title,\n  onClick,\n  children\n}) => {\n  return <button className={classNames('flex items-center text-gobezeai-elements-item-contentDefault bg-transparent enabled:hover:text-gobezeai-elements-item-contentActive rounded-md p-1 enabled:hover:bg-gobezeai-elements-item-backgroundActive disabled:cursor-not-allowed', {\n    [classNames('opacity-30', disabledClassName)]: disabled\n  }, className)} title={title} disabled={disabled} onClick={event => {\n    if (disabled) {\n      return;\n    }\n    onClick?.(event);\n  }}>\n        {children ? children : <div className={classNames(icon, getIconSize(size), iconClassName)}></div>}\n      </button>;\n});\n_c2 = IconButton;\nfunction getIconSize(size) {\n  if (size === 'sm') {\n    return 'text-sm';\n  } else if (size === 'md') {\n    return 'text-md';\n  } else if (size === 'lg') {\n    return 'text-lg';\n  } else if (size === 'xl') {\n    return 'text-xl';\n  } else {\n    return 'text-2xl';\n  }\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"IconButton$memo\");\n$RefreshReg$(_c2, \"IconButton\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/utils/classNames.ts\"\n);\nimport.meta.hot.lastModified = \"1737602845915.224\";\n}\n// REMIX HMR END\n\n/**\n * Copyright (c) 2018 Jed Watson.\n * Licensed under the MIT License (MIT), see:\n *\n * @link http://jedwatson.github.io/classnames\n */\n\ntype ClassNamesArg = undefined | string | Record<string, boolean> | ClassNamesArg[];\n\n/**\n * A simple JavaScript utility for conditionally joining classNames together.\n *\n * @param args A series of classes or object with key that are class and values\n * that are interpreted as boolean to decide whether or not the class\n * should be included in the final class.\n */\nexport function classNames(...args: ClassNamesArg[]): string {\n  let classes = '';\n\n  for (const arg of args) {\n    classes = appendClass(classes, parseValue(arg));\n  }\n\n  return classes;\n}\n\nfunction parseValue(arg: ClassNamesArg) {\n  if (typeof arg === 'string' || typeof arg === 'number') {\n    return arg;\n  }\n\n  if (typeof arg !== 'object') {\n    return '';\n  }\n\n  if (Array.isArray(arg)) {\n    return classNames(...arg);\n  }\n\n  let classes = '';\n\n  for (const key in arg) {\n    if (arg[key]) {\n      classes = appendClass(classes, key);\n    }\n  }\n\n  return classes;\n}\n\nfunction appendClass(value: string, newClass: string | undefined) {\n  if (!newClass) {\n    return value;\n  }\n\n  if (value) {\n    return value + ' ' + newClass;\n  }\n\n  return value + newClass;\n}\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/lib/runtime/action-runner.ts\"\n);\nimport.meta.hot.lastModified = \"1738207898730.4854\";\n}\n// REMIX HMR END\n\nimport { WebContainer } from '@webcontainer/api';\nimport { map, type MapStore } from 'nanostores';\nimport * as nodePath from 'path';\nimport type { GobezeAIAction } from '~/types/actions';\nimport { createScopedLogger } from '~/utils/logger';\nimport { unreachable } from '~/utils/unreachable';\nimport { dirname } from '~/utils/path';\nimport type { ActionCallbackData } from './message-parser';\n\nconst logger = createScopedLogger('ActionRunner');\n\nexport type ActionStatus = 'pending' | 'running' | 'complete' | 'aborted' | 'failed';\n\nexport type BaseActionState = GobezeAIAction & {\n  status: Exclude<ActionStatus, 'failed'>;\n  abort: () => void;\n  executed: boolean;\n  abortSignal: AbortSignal;\n};\n\nexport type FailedActionState = GobezeAIAction &\n  Omit<BaseActionState, 'status'> & {\n    status: Extract<ActionStatus, 'failed'>;\n    error: string;\n  };\n\nexport type ActionState = BaseActionState | FailedActionState;\n\ntype BaseActionUpdate = Partial<Pick<BaseActionState, 'status' | 'abort' | 'executed'>>;\n\nexport type ActionStateUpdate =\n  | BaseActionUpdate\n  | (Omit<BaseActionUpdate, 'status'> & { status: 'failed'; error: string });\n\ntype ActionsMap = MapStore<Record<string, ActionState>>;\n\nexport class ActionRunner {\n  #webcontainer: Promise<WebContainer>;\n  #currentExecutionPromise: Promise<void> = Promise.resolve();\n\n  actions: ActionsMap = map({});\n\n  constructor(webcontainerPromise: Promise<WebContainer>) {\n    this.#webcontainer = webcontainerPromise;\n  }\n\n  addAction(data: ActionCallbackData) {\n    const { actionId } = data;\n\n    const actions = this.actions.get();\n    const action = actions[actionId];\n\n    if (action) {\n      // action already added\n      return;\n    }\n\n    const abortController = new AbortController();\n\n    this.actions.setKey(actionId, {\n      ...data.action,\n      status: 'pending',\n      executed: false,\n      abort: () => {\n        abortController.abort();\n        this.#updateAction(actionId, { status: 'aborted' });\n      },\n      abortSignal: abortController.signal,\n    });\n\n    this.#currentExecutionPromise.then(() => {\n      this.#updateAction(actionId, { status: 'running' });\n    });\n  }\n\n  async runAction(data: ActionCallbackData) {\n    const { actionId } = data;\n    const action = this.actions.get()[actionId];\n\n    if (!action) {\n      unreachable(`Action ${actionId} not found`);\n    }\n\n    if (action.executed) {\n      return;\n    }\n\n    this.#updateAction(actionId, { ...action, ...data.action, executed: true });\n\n    this.#currentExecutionPromise = this.#currentExecutionPromise\n      .then(() => {\n        return this.#executeAction(actionId);\n      })\n      .catch((error) => {\n        console.error('Action failed:', error);\n      });\n  }\n\n  async #executeAction(actionId: string) {\n    const action = this.actions.get()[actionId];\n\n    this.#updateAction(actionId, { status: 'running' });\n\n    try {\n      switch (action.type) {\n        case 'shell': {\n          await this.#runShellAction(action);\n          break;\n        }\n        case 'file': {\n          await this.#runFileAction(action);\n          break;\n        }\n      }\n\n      this.#updateAction(actionId, { status: action.abortSignal.aborted ? 'aborted' : 'complete' });\n    } catch (error) {\n      this.#updateAction(actionId, { status: 'failed', error: 'Action failed' });\n\n      // re-throw the error to be caught in the promise chain\n      throw error;\n    }\n  }\n\n  async #runShellAction(action: ActionState) {\n    if (action.type !== 'shell') {\n      unreachable('Expected shell action');\n    }\n\n    const webcontainer = await this.#webcontainer;\n\n    const process = await webcontainer.spawn('jsh', ['-c', action.content], {\n      env: { npm_config_yes: true },\n    });\n\n    action.abortSignal.addEventListener('abort', () => {\n      process.kill();\n    });\n\n    process.output.pipeTo(\n      new WritableStream({\n        write(data) {\n          console.log(data);\n        },\n      }),\n    );\n\n    const exitCode = await process.exit;\n\n    logger.debug(`Process terminated with code ${exitCode}`);\n  }\n\n  async #runFileAction(action: ActionState) {\n    if (action.type !== 'file') {\n      unreachable('Expected file action');\n    }\n\n    const webcontainer = await this.#webcontainer;\n\n    let folder = dirname(action.filePath);\n\n    // remove trailing slashes\n    folder = folder.replace(/\\/+$/g, '');\n\n    if (folder !== '.') {\n      try {\n        await webcontainer.fs.mkdir(folder, { recursive: true });\n        logger.debug('Created folder', folder);\n      } catch (error) {\n        logger.error('Failed to create folder\\n\\n', error);\n      }\n    }\n\n    try {\n      await webcontainer.fs.writeFile(action.filePath, action.content);\n      logger.debug(`File written ${action.filePath}`);\n    } catch (error) {\n      logger.error('Failed to write file\\n\\n', error);\n    }\n  }\n\n  #updateAction(id: string, newState: ActionStateUpdate) {\n    const actions = this.actions.get();\n\n    this.actions.setKey(id, { ...actions[id], ...newState });\n  }\n}\n", "export const DEFAULT_EDITOR_ORIGIN = 'https://stackblitz.com';\nexport const SEARCH_PARAM_AUTH_CODE = 'code';\nexport const SEARCH_PARAM_ERROR = 'error';\nexport const SEARCH_PARAM_ERROR_DESCRIPTION = 'error_description';\nexport const BROADCAST_CHANNEL_NAME = '__wc_api_bc__';\nexport const STORAGE_TOKENS_NAME = '__wc_api_tokens__';\nexport const STORAGE_CODE_VERIFIER_NAME = '__wc_api_verifier__';\nexport const STORAGE_POPUP_NAME = '__wc_api_popup__';\n", "export class TypedEventTarget {\n    _bus = new EventTarget();\n    listen(listener) {\n        function wrappedListener(event) {\n            listener(event.data);\n        }\n        this._bus.addEventListener('message', wrappedListener);\n        return () => this._bus.removeEventListener('message', wrappedListener);\n    }\n    fireEvent(data) {\n        this._bus.dispatchEvent(new MessageEvent('message', { data }));\n    }\n}\n", "import { STORAGE_TOKENS_NAME } from './constants.js';\nimport { TypedEventTarget } from './TypedEventTarget.js';\nconst IGNORED_ERROR = new Error();\nIGNORED_ERROR.stack = '';\nconst accessTokenChangedListeners = new TypedEventTarget();\n/**\n * @internal\n */\nexport class Tokens {\n    origin;\n    refresh;\n    access;\n    expires;\n    _revoked = new AbortController();\n    constructor(\n    // editor origin that those tokens are bound to, mostly used for development\n    origin, \n    // token to use to get a new access token\n    refresh, \n    // token to provide to webcontainer\n    access, \n    // time in UTC when the token expires\n    expires) {\n        this.origin = origin;\n        this.refresh = refresh;\n        this.access = access;\n        this.expires = expires;\n    }\n    async activate(onFailedRefresh) {\n        if (this._revoked.signal.aborted) {\n            throw new Error('Token revoked');\n        }\n        // if the access token expired we fetch a new one\n        if (this.expires < Date.now()) {\n            if (!(await this._fetchNewAccessToken())) {\n                return false;\n            }\n        }\n        this._sync();\n        this._startRefreshTokensLoop(onFailedRefresh);\n        return true;\n    }\n    async revoke(clientId, ignoreRevokeError) {\n        this._revoked.abort();\n        try {\n            const response = await fetch(`${this.origin}/oauth/revoke`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: new URLSearchParams({ token: this.refresh, token_type_hint: 'refresh_token', client_id: clientId }),\n                mode: 'cors',\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to logout`);\n            }\n        }\n        catch (error) {\n            if (!ignoreRevokeError) {\n                throw error;\n            }\n        }\n        clearTokensInStorage();\n    }\n    static fromStorage() {\n        const savedTokens = readTokensFromStorage();\n        if (!savedTokens) {\n            return null;\n        }\n        return new Tokens(savedTokens.origin, savedTokens.refresh, savedTokens.access, savedTokens.expires);\n    }\n    static async fromAuthCode({ editorOrigin, clientId, codeVerifier, authCode, redirectUri, }) {\n        const response = await fetch(`${editorOrigin}/oauth/token`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: new URLSearchParams({\n                client_id: clientId,\n                code: authCode,\n                code_verifier: codeVerifier,\n                grant_type: 'authorization_code',\n                redirect_uri: redirectUri,\n            }),\n            mode: 'cors',\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to fetch token: ${response.status}`);\n        }\n        const tokenResponse = await response.json();\n        assertTokenResponse(tokenResponse);\n        const { access_token: access, refresh_token: refresh } = tokenResponse;\n        const expires = getExpiresFromTokenResponse(tokenResponse);\n        return new Tokens(editorOrigin, refresh, access, expires);\n    }\n    async _fetchNewAccessToken() {\n        try {\n            const response = await fetch(`${this.origin}/oauth/token`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: new URLSearchParams({\n                    grant_type: 'refresh_token',\n                    refresh_token: this.refresh,\n                }),\n                mode: 'cors',\n                signal: this._revoked.signal,\n            });\n            if (!response.ok) {\n                throw IGNORED_ERROR;\n            }\n            const tokenResponse = await response.json();\n            assertTokenResponse(tokenResponse);\n            const { access_token: access, refresh_token: refresh } = tokenResponse;\n            const expires = getExpiresFromTokenResponse(tokenResponse);\n            this.access = access;\n            this.expires = expires;\n            this.refresh = refresh;\n            return true;\n        }\n        catch {\n            clearTokensInStorage();\n            return false;\n        }\n    }\n    _sync() {\n        persistTokensInStorage(this);\n        fireAccessTokenChanged(this.access);\n    }\n    async _startRefreshTokensLoop(onFailedRefresh) {\n        while (true) {\n            const expiresIn = this.expires - Date.now() - 1000;\n            await wait(Math.max(expiresIn, 1000));\n            if (this._revoked.signal.aborted) {\n                return;\n            }\n            if (!this._fetchNewAccessToken()) {\n                onFailedRefresh();\n                return;\n            }\n            this._sync();\n        }\n    }\n}\n/**\n * @internal\n */\nexport function clearTokensInStorage() {\n    localStorage.removeItem(STORAGE_TOKENS_NAME);\n}\n/**\n * @internal\n */\nexport function addAccessTokenChangedListener(listener) {\n    return accessTokenChangedListeners.listen(listener);\n}\nfunction readTokensFromStorage() {\n    const serializedTokens = localStorage.getItem(STORAGE_TOKENS_NAME);\n    if (!serializedTokens) {\n        return null;\n    }\n    try {\n        return JSON.parse(serializedTokens);\n    }\n    catch {\n        return null;\n    }\n}\nfunction persistTokensInStorage(tokens) {\n    localStorage.setItem(STORAGE_TOKENS_NAME, JSON.stringify(tokens));\n}\nfunction getExpiresFromTokenResponse({ created_at, expires_in }) {\n    return (created_at + expires_in) * 1000;\n}\nfunction assertTokenResponse(token) {\n    if (typeof token !== 'object' || !token) {\n        throw new Error('Invalid Token Response');\n    }\n    if (typeof token.access_token !== 'string' ||\n        typeof token.refresh_token !== 'string' ||\n        typeof token.created_at !== 'number' ||\n        typeof token.expires_in !== 'number') {\n        throw new Error('Invalid Token Response');\n    }\n}\nfunction wait(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\nfunction fireAccessTokenChanged(accessToken) {\n    accessTokenChangedListeners.fireEvent(accessToken);\n}\n", "import { DEFAULT_EDITOR_ORIGIN } from './constants.js';\nconst params = {};\nlet editorOrigin = null;\nexport const iframeSettings = {\n    get editorOrigin() {\n        if (editorOrigin == null) {\n            editorOrigin = new URL(globalThis.WEBCONTAINER_API_IFRAME_URL ?? DEFAULT_EDITOR_ORIGIN).origin;\n        }\n        return editorOrigin;\n    },\n    set editorOrigin(newOrigin) {\n        editorOrigin = new URL(newOrigin).origin;\n    },\n    setQueryParam(key, value) {\n        params[key] = value;\n    },\n    get url() {\n        const url = new URL(this.editorOrigin);\n        url.pathname = '/headless';\n        for (const param in params) {\n            url.searchParams.set(param, params[param]);\n        }\n        url.searchParams.set('version', \"1.5.1-internal.7\");\n        return url;\n    },\n};\n", "/**\n * @internal\n */\nexport function resettablePromise() {\n    let resolve;\n    let promise;\n    function reset() {\n        promise = new Promise((_resolve) => (resolve = _resolve));\n    }\n    reset();\n    return {\n        get promise() {\n            return promise;\n        },\n        resolve(value) {\n            return resolve(value);\n        },\n        reset,\n    };\n}\n", "import { Tokens, clearTokensInStorage } from './tokens.js';\nimport { SEARCH_PARAM_AUTH_CODE, SEARCH_PARAM_ERROR, STORAGE_CODE_VERIFIER_NAME, BROADCAST_CHANNEL_NAME, STORAGE_POPUP_NAME, SEARCH_PARAM_ERROR_DESCRIPTION, } from './constants.js';\nimport { iframeSettings } from './iframe-url.js';\nimport { S256, newCodeVerifier } from './code.js';\nimport { resettablePromise } from './reset-promise.js';\nimport { TypedEventTarget } from './TypedEventTarget.js';\n/**\n * @internal\n */\nexport const authState = {\n    initialized: false,\n    bootCalled: false,\n    authComplete: resettablePromise(),\n    clientId: '',\n    oauthScope: '',\n    broadcastChannel: null,\n    get editorOrigin() {\n        return iframeSettings.editorOrigin;\n    },\n    tokens: null,\n};\nconst authFailedListeners = new TypedEventTarget();\nconst loggedOutListeners = new TypedEventTarget();\nfunction broadcastMessage(message) {\n    if (!authState.broadcastChannel) {\n        return;\n    }\n    authState.broadcastChannel.postMessage(message);\n    // check if we are in a popup mode\n    if (localStorage.getItem(STORAGE_POPUP_NAME) === 'true' && message.type !== 'auth-logout') {\n        localStorage.removeItem(STORAGE_POPUP_NAME);\n        // wait a tick to make sure the posted message has been sent\n        setTimeout(() => {\n            window.close();\n        });\n    }\n}\nexport const auth = {\n    init({ editorOrigin, clientId, scope }) {\n        if (authState.initialized) {\n            throw new Error('Init should only be called once');\n        }\n        let enterprise = true;\n        // #region internal\n        enterprise = false;\n        // #endregion\n        if (enterprise && authState.bootCalled) {\n            throw new Error('`auth.init` should always be called before `WebContainer.boot`');\n        }\n        authState.initialized = true;\n        authState.tokens = Tokens.fromStorage();\n        authState.clientId = clientId;\n        authState.oauthScope = scope;\n        authState.broadcastChannel = new BroadcastChannel(BROADCAST_CHANNEL_NAME);\n        // configure iframe url\n        iframeSettings.setQueryParam('client_id', clientId);\n        if (editorOrigin) {\n            iframeSettings.editorOrigin = new URL(editorOrigin).origin;\n        }\n        loggedOutListeners.listen(() => authState.authComplete.reset());\n        // if authentication or logout are done in another page, we want to reflect the state on this page as well\n        authState.broadcastChannel.addEventListener('message', onChannelMessage);\n        async function onChannelMessage(event) {\n            const typedEvent = event.data;\n            if (typedEvent.type === 'auth-complete') {\n                authState.tokens = Tokens.fromStorage();\n                // we ignore the possible error here because they can't have expired just yet\n                await authState.tokens.activate(onFailedTokenRefresh);\n                authState.authComplete.resolve();\n                return;\n            }\n            if (typedEvent.type === 'auth-failed') {\n                authFailedListeners.fireEvent(typedEvent);\n                return;\n            }\n            if (typedEvent.type === 'auth-logout') {\n                loggedOutListeners.fireEvent();\n                return;\n            }\n        }\n        if (authState.tokens) {\n            const tokens = authState.tokens;\n            if (tokens.origin === authState.editorOrigin) {\n                /**\n                 * Here we assume that the refresh token never expires which\n                 * might not be correct. If that is the case though, we will\n                 * emit a 'logged-out' event to signal that the user has been\n                 * logged out, which could also happen at a later time anyway.\n                 *\n                 * Because this flow is done entirely locally, we do not broadcast\n                 * anything to the other tabs. They should be performing a similar\n                 * check.\n                 */\n                (async () => {\n                    const success = await tokens.activate(onFailedTokenRefresh);\n                    if (!success) {\n                        // if we got new token in the meantime we discard this error\n                        if (authState.tokens !== tokens) {\n                            return;\n                        }\n                        loggedOutListeners.fireEvent();\n                        return;\n                    }\n                    authState.authComplete.resolve();\n                })();\n                return { status: 'authorized' };\n            }\n            clearTokensInStorage();\n            authState.tokens = null;\n        }\n        const locationURL = new URL(window.location.href);\n        const { searchParams } = locationURL;\n        const updateURL = () => window.history.replaceState({}, document.title, locationURL);\n        // check for errors first, aka the user declined the authorisation or stackblitz did\n        if (searchParams.has(SEARCH_PARAM_ERROR)) {\n            const error = searchParams.get(SEARCH_PARAM_ERROR);\n            const description = searchParams.get(SEARCH_PARAM_ERROR_DESCRIPTION);\n            searchParams.delete(SEARCH_PARAM_ERROR);\n            searchParams.delete(SEARCH_PARAM_ERROR_DESCRIPTION);\n            updateURL();\n            broadcastMessage({ type: 'auth-failed', error, description });\n            return { status: 'auth-failed', error, description };\n        }\n        // if there's an auth code\n        if (searchParams.has(SEARCH_PARAM_AUTH_CODE)) {\n            const authCode = searchParams.get(SEARCH_PARAM_AUTH_CODE);\n            const editorOrigin = authState.editorOrigin;\n            searchParams.delete(SEARCH_PARAM_AUTH_CODE);\n            updateURL();\n            const codeVerifier = localStorage.getItem(STORAGE_CODE_VERIFIER_NAME);\n            if (!codeVerifier) {\n                return { status: 'need-auth' };\n            }\n            localStorage.removeItem(STORAGE_CODE_VERIFIER_NAME);\n            Tokens.fromAuthCode({\n                editorOrigin,\n                clientId: authState.clientId,\n                authCode,\n                codeVerifier,\n                redirectUri: defaultRedirectUri(),\n            })\n                .then(async (tokens) => {\n                authState.tokens = tokens;\n                assertAuthTokens(authState.tokens);\n                const success = await authState.tokens.activate(onFailedTokenRefresh);\n                // if authentication failed we throw, and we'll mark auth as failed\n                if (!success) {\n                    throw new Error();\n                }\n                authState.authComplete.resolve();\n                broadcastMessage({ type: 'auth-complete' });\n            })\n                .catch((error) => {\n                // this should never happen unless the rails app is now down for some reason?\n                console.error(error);\n                // treat it as a logged out event so that the user can retry to login\n                loggedOutListeners.fireEvent();\n                broadcastMessage({ type: 'auth-logout' });\n            });\n            return { status: 'authorized' };\n        }\n        return { status: 'need-auth' };\n    },\n    async startAuthFlow({ popup } = {}) {\n        if (!authState.initialized) {\n            throw new Error('auth.init must be called first');\n        }\n        if (popup) {\n            localStorage.setItem(STORAGE_POPUP_NAME, 'true');\n            const height = 500;\n            const width = 620;\n            const left = window.screenLeft + (window.outerWidth - width) / 2;\n            const top = window.screenTop + (window.outerHeight - height) / 2;\n            window.open(await generateOAuthRequest(), '_blank', `popup,width=${width},height=${height},left=${left},top=${top}`);\n        }\n        else {\n            window.location.href = await generateOAuthRequest();\n        }\n    },\n    async logout({ ignoreRevokeError } = {}) {\n        await authState.tokens?.revoke(authState.clientId, ignoreRevokeError ?? false);\n        loggedOutListeners.fireEvent();\n        broadcastMessage({ type: 'auth-logout' });\n    },\n    loggedIn() {\n        return authState.authComplete.promise;\n    },\n    on(event, listener) {\n        switch (event) {\n            case 'auth-failed': {\n                return authFailedListeners.listen(listener);\n            }\n            case 'logged-out': {\n                return loggedOutListeners.listen(listener);\n            }\n            default: {\n                throw new Error(`Unsupported event type '${event}'.`);\n            }\n        }\n    },\n};\nfunction onFailedTokenRefresh() {\n    loggedOutListeners.fireEvent();\n    broadcastMessage({ type: 'auth-logout' });\n}\nfunction defaultRedirectUri() {\n    return window.location.href;\n}\nasync function generateOAuthRequest() {\n    const codeVerifier = newCodeVerifier();\n    localStorage.setItem(STORAGE_CODE_VERIFIER_NAME, codeVerifier);\n    const codeChallenge = await S256(codeVerifier);\n    const url = new URL('/oauth/authorize', authState.editorOrigin);\n    const { searchParams } = url;\n    searchParams.append('response_type', 'code');\n    searchParams.append('client_id', authState.clientId);\n    searchParams.append('redirect_uri', defaultRedirectUri());\n    searchParams.append('scope', authState.oauthScope);\n    searchParams.append('code_challenge', codeChallenge);\n    searchParams.append('code_challenge_method', 'S256');\n    return url.toString();\n}\n/**\n * @internal\n */\nexport function assertAuthTokens(tokens) {\n    if (!tokens) {\n        throw new Error('Oops! Tokens is not defined when it always should be.');\n    }\n}\n", "/**\n * This type is in a separate module so that localservice can import it\n * without bundling all the other webcontainer specific stuff.\n */\nexport var PreviewMessageType;\n(function (PreviewMessageType) {\n    PreviewMessageType[\"UncaughtException\"] = \"PREVIEW_UNCAUGHT_EXCEPTION\";\n    PreviewMessageType[\"UnhandledRejection\"] = \"PREVIEW_UNHANDLED_REJECTION\";\n    PreviewMessageType[\"ConsoleError\"] = \"PREVIEW_CONSOLE_ERROR\";\n})(PreviewMessageType || (PreviewMessageType = {}));\n", "var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// dist/vendor/comlink.js\nvar comlink_exports = {};\n__export(comlink_exports, {\n  createEndpoint: () => createEndpoint,\n  expose: () => expose,\n  proxy: () => proxy,\n  proxyMarker: () => proxyMarker,\n  releaseProxy: () => releaseProxy,\n  transfer: () => transfer,\n  transferHandlers: () => transferHandlers,\n  windowEndpoint: () => windowEndpoint,\n  wrap: () => wrap\n});\n\n// ../../node_modules/comlink/dist/esm/comlink.mjs\nvar proxyMarker = Symbol(\"Comlink.proxy\");\nvar createEndpoint = Symbol(\"Comlink.endpoint\");\nvar releaseProxy = Symbol(\"Comlink.releaseProxy\");\nvar throwMarker = Symbol(\"Comlink.thrown\");\nvar isObject = (val) => typeof val === \"object\" && val !== null || typeof val === \"function\";\nvar proxyTransferHandler = {\n  canHandle: (val) => isObject(val) && val[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  }\n};\nvar throwTransferHandler = {\n  canHandle: (value) => isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack\n        }\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(new Error(serialized.value.message), serialized.value);\n    }\n    throw serialized.value;\n  }\n};\nvar transferHandlers = /* @__PURE__ */ new Map([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler]\n]);\nfunction expose(obj, ep = self) {\n  ep.addEventListener(\"message\", function callback(ev) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = Object.assign({ path: [] }, ev.data);\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj2, prop) => obj2[prop], obj);\n      const rawValue = path.reduce((obj2, prop) => obj2[prop], obj);\n      switch (type) {\n        case 0:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case 1:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case 2:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case 3:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case 4:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case 5:\n          {\n            returnValue = void 0;\n          }\n          break;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue).catch((value) => {\n      return { value, [throwMarker]: 0 };\n    }).then((returnValue2) => {\n      const [wireValue, transferables] = toWireValue(returnValue2);\n      ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n      if (type === 5) {\n        ep.removeEventListener(\"message\", callback);\n        closeEndPoint(ep);\n      }\n    });\n  });\n  if (ep.start) {\n    ep.start();\n  }\n}\nfunction isMessagePort(endpoint) {\n  return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n  if (isMessagePort(endpoint))\n    endpoint.close();\n}\nfunction wrap(ep, target) {\n  return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\nfunction createProxy(ep, path = [], target = function() {\n}) {\n  let isProxyReleased = false;\n  const proxy2 = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: 5,\n            path: path.map((p) => p.toString())\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy2 };\n        }\n        const r = requestResponseMessage(ep, {\n          type: 0,\n          path: path.map((p) => p.toString())\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(ep, {\n        type: 1,\n        path: [...path, prop].map((p) => p.toString()),\n        value\n      }, transferables).then(fromWireValue);\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if (last === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: 4\n        }).then(fromWireValue);\n      }\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(ep, {\n        type: 2,\n        path: path.map((p) => p.toString()),\n        argumentList\n      }, transferables).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(ep, {\n        type: 3,\n        path: path.map((p) => p.toString()),\n        argumentList\n      }, transferables).then(fromWireValue);\n    }\n  });\n  return proxy2;\n}\nfunction myFlat(arr) {\n  return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nvar transferCache = /* @__PURE__ */ new WeakMap();\nfunction transfer(obj, transfers) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\nfunction proxy(obj) {\n  return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\n  return {\n    postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context)\n  };\n}\nfunction toWireValue(value) {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: 3,\n          name,\n          value: serializedValue\n        },\n        transferables\n      ];\n    }\n  }\n  return [\n    {\n      type: 0,\n      value\n    },\n    transferCache.get(value) || []\n  ];\n}\nfunction fromWireValue(value) {\n  switch (value.type) {\n    case 3:\n      return transferHandlers.get(value.name).deserialize(value.value);\n    case 0:\n      return value.value;\n  }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l);\n      resolve(ev.data);\n    });\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage(Object.assign({ id }, msg), transfers);\n  });\n}\nfunction generateUUID() {\n  return new Array(4).fill(0).map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16)).join(\"-\");\n}\nexport {\n  comlink_exports as Comlink\n};\n", "import { PreviewMessageType } from '../preview-message-types.js';\nconst PREVIEW_MESSAGE_TYPES = [\n    PreviewMessageType.ConsoleError,\n    PreviewMessageType.UncaughtException,\n    PreviewMessageType.UnhandledRejection,\n];\nexport function isPreviewMessage(data) {\n    if (data == null || typeof data !== 'object') {\n        return false;\n    }\n    if (!('type' in data) || !PREVIEW_MESSAGE_TYPES.includes(data.type)) {\n        return false;\n    }\n    return true;\n}\n", "export function nullPrototype(source) {\n    const prototype = Object.create(null);\n    if (!source) {\n        return prototype;\n    }\n    return Object.assign(prototype, source);\n}\n", "import { nullPrototype } from './null-prototype.js';\n/**\n * @internal\n */\nexport function toInternalFileSystemTree(tree) {\n    const newTree = { d: {} };\n    for (const name of Object.keys(tree)) {\n        const entry = tree[name];\n        if ('file' in entry) {\n            if ('symlink' in entry.file) {\n                newTree.d[name] = { f: { l: entry.file.symlink } };\n                continue;\n            }\n            const contents = entry.file.contents;\n            const stringContents = typeof contents === 'string' ? contents : binaryString(contents);\n            const binary = typeof contents === 'string' ? {} : { b: true };\n            newTree.d[name] = { f: { c: stringContents, ...binary } };\n            continue;\n        }\n        const newEntry = toInternalFileSystemTree(entry.directory);\n        newTree.d[name] = newEntry;\n    }\n    return newTree;\n}\n/**\n * @internal\n */\nexport function toExternalFileSystemTree(tree) {\n    const newTree = nullPrototype();\n    if ('f' in tree) {\n        throw new Error('It is not possible to export a single file in the JSON format.');\n    }\n    if ('d' in tree) {\n        for (const name of Object.keys(tree.d)) {\n            const entry = tree.d[name];\n            if ('d' in entry) {\n                newTree[name] = nullPrototype({\n                    directory: toExternalFileSystemTree(entry),\n                });\n            }\n            else if ('f' in entry) {\n                if ('c' in entry.f) {\n                    newTree[name] = nullPrototype({\n                        file: nullPrototype({\n                            contents: entry.f.c,\n                        }),\n                    });\n                }\n                else if ('l' in entry.f) {\n                    newTree[name] = nullPrototype({\n                        file: nullPrototype({\n                            symlink: entry.f.l,\n                        }),\n                    });\n                }\n            }\n        }\n    }\n    return newTree;\n}\nfunction binaryString(bytes) {\n    let result = '';\n    for (const byte of bytes) {\n        result += String.fromCharCode(byte);\n    }\n    return result;\n}\n", "/**\n * The WebContainer Public API allows you build custom applications on top of an in-browser Node.js runtime.\n *\n * Its main entrypoint is the {@link WebContainer} class.\n *\n * @packageDocumentation\n */\nimport { authState, assertAuthTokens } from './internal/auth-state.js';\nimport { PreviewMessageType } from './preview-message-types.js';\nimport { Comlink } from './vendor/index.js';\nimport { auth as authImpl } from './internal/auth-state.js';\nimport { addAccessTokenChangedListener } from './internal/tokens.js';\nimport { iframeSettings } from './internal/iframe-url.js';\nimport { isPreviewMessage, toInternalFileSystemTree, toExternalFileSystemTree } from './utils.js';\nexport const auth = authImpl;\nexport { PreviewMessageType };\nexport * from './utils.js';\nlet bootPromise = null;\nlet cachedServerPromise = null;\nlet cachedBootOptions = {};\nconst decoder = new TextDecoder();\nconst encoder = new TextEncoder();\n/**\n * The main export of this library. An instance of `WebContainer` represents a runtime\n * ready to be used.\n */\nexport class WebContainer {\n    _instance;\n    _runtimeInfo;\n    /**\n     * Gives access to the underlying file system.\n     */\n    fs;\n    // #region internal\n    internal;\n    // #endregion\n    static _instance = null;\n    _tornDown = false;\n    _unsubscribeFromTokenChangedListener = () => { };\n    /** @internal */\n    constructor(\n    /** @internal */\n    _instance, fs, \n    /** @internal */\n    _runtimeInfo) {\n        this._instance = _instance;\n        this._runtimeInfo = _runtimeInfo;\n        this.fs = new FileSystemAPIClient(fs);\n        // #region internal\n        this.internal = new WebContainerInternal(_instance);\n        // #endregion\n        // forward the credentials to webcontainer if needed\n        if (authState.initialized) {\n            this._unsubscribeFromTokenChangedListener = addAccessTokenChangedListener((accessToken) => {\n                this._instance.setCredentials({ accessToken, editorOrigin: authState.editorOrigin });\n            });\n            (async () => {\n                await authState.authComplete.promise;\n                if (this._tornDown) {\n                    return;\n                }\n                assertAuthTokens(authState.tokens);\n                await this._instance.setCredentials({\n                    accessToken: authState.tokens.access,\n                    editorOrigin: authState.editorOrigin,\n                });\n            })().catch((error) => {\n                // print the error as this is likely a bug in webcontainer\n                console.error(error);\n            });\n        }\n    }\n    async spawn(command, optionsOrArgs, options) {\n        let args = [];\n        if (Array.isArray(optionsOrArgs)) {\n            args = optionsOrArgs;\n        }\n        else {\n            options = optionsOrArgs;\n        }\n        let output = undefined;\n        let outputStream = new ReadableStream();\n        if (options?.output !== false) {\n            const result = streamWithPush();\n            output = result.push;\n            outputStream = result.stream;\n        }\n        let stdout = undefined;\n        let stdoutStream;\n        let stderr = undefined;\n        let stderrStream;\n        // #region internal\n        stdoutStream = new ReadableStream();\n        stderrStream = new ReadableStream();\n        if (options?.stdout) {\n            const result = streamWithPush();\n            stdout = result.push;\n            stdoutStream = result.stream;\n        }\n        if (options?.stderr) {\n            const result = streamWithPush();\n            stderr = result.push;\n            stderrStream = result.stream;\n        }\n        // #endregion\n        const wrappedOutput = proxyListener(binaryListener(output));\n        const wrappedStdout = proxyListener(binaryListener(stdout));\n        const wrappedStderr = proxyListener(binaryListener(stderr));\n        const process = await this._instance.run({\n            command,\n            args,\n            cwd: options?.cwd,\n            env: options?.env,\n            terminal: options?.terminal,\n        }, wrappedStdout, wrappedStderr, wrappedOutput);\n        return new WebContainerProcessImpl(process, outputStream, stdoutStream, stderrStream);\n    }\n    async export(path, options) {\n        const serializeOptions = {\n            format: options?.format ?? 'json',\n            includes: options?.includes,\n            excludes: options?.excludes,\n            external: true,\n        };\n        const result = await this._instance.serialize(path, serializeOptions);\n        if (serializeOptions.format === 'json') {\n            const data = JSON.parse(decoder.decode(result));\n            return toExternalFileSystemTree(data);\n        }\n        return result;\n    }\n    on(event, listener) {\n        if (event === 'preview-message') {\n            const originalListener = listener;\n            listener = ((message) => {\n                if (isPreviewMessage(message)) {\n                    originalListener(message);\n                }\n            });\n        }\n        const { listener: wrapped, subscribe } = syncSubscription(listener);\n        return subscribe(this._instance.on(event, Comlink.proxy(wrapped)));\n    }\n    /**\n     * Mounts a tree of files into the filesystem. This can be specified as a tree object ({@link FileSystemTree})\n     * or as a binary snapshot generated by [`@webcontainer/snapshot`](https://www.npmjs.com/package/@webcontainer/snapshot).\n     *\n     * @param snapshotOrTree - A tree of files, or a binary snapshot. Note that binary payloads will be transferred.\n     * @param options.mountPoint - Specifies a nested path where the tree should be mounted.\n     */\n    mount(snapshotOrTree, options) {\n        const payload = snapshotOrTree instanceof Uint8Array\n            ? snapshotOrTree\n            : snapshotOrTree instanceof ArrayBuffer\n                ? new Uint8Array(snapshotOrTree)\n                : encoder.encode(JSON.stringify(toInternalFileSystemTree(snapshotOrTree)));\n        return this._instance.loadFiles(Comlink.transfer(payload, [payload.buffer]), {\n            mountPoints: options?.mountPoint,\n        });\n    }\n    /**\n     * Set a custom script to be injected into all previews. When this function is called, every\n     * future page reload will contain the provided script tag on all HTML responses.\n     *\n     * Note:\n     *\n     * When this function resolves, every preview reloaded _after_ will have the new script.\n     * Existing preview have to be explicitely reloaded.\n     *\n     * To reload a preview you can use `reloadPreview`.\n     *\n     * @param scriptSrc Source for the script tag.\n     * @param options Options to define which type of script this is.\n     */\n    setPreviewScript(scriptSrc, options) {\n        return this._instance.setPreviewScript(scriptSrc, options);\n    }\n    /**\n     * The default value of the `PATH` environment variable for processes started through {@link spawn}.\n     */\n    get path() {\n        return this._runtimeInfo.path;\n    }\n    /**\n     * The full path to the working directory (see {@link FileSystemAPI}).\n     */\n    get workdir() {\n        return this._runtimeInfo.cwd;\n    }\n    /**\n     * Destroys the WebContainer instance, turning it unusable, and releases its resources. After this,\n     * a new WebContainer instance can be obtained by calling {@link WebContainer.boot | `boot`}.\n     *\n     * All entities derived from this instance (e.g. processes, the file system, etc.) also become unusable\n     * after calling this method.\n     */\n    teardown() {\n        if (this._tornDown) {\n            throw new Error('WebContainer already torn down');\n        }\n        this._tornDown = true;\n        this._unsubscribeFromTokenChangedListener();\n        this.fs._teardown();\n        this._instance.teardown();\n        this._instance[Comlink.releaseProxy]();\n        if (WebContainer._instance === this) {\n            WebContainer._instance = null;\n        }\n    }\n    /**\n     * Boots a WebContainer. Only a single instance of WebContainer can be booted concurrently\n     * (see {@link WebContainer.teardown | `teardown`}).\n     *\n     * Booting WebContainer is an expensive operation.\n     */\n    static async boot(options = {}) {\n        const { workdirName } = options;\n        if (window.crossOriginIsolated && options.coep === 'none') {\n            console.warn(`A Cross-Origin-Embedder-Policy header is required in cross origin isolated environments.\\nSet the 'coep' option to 'require-corp'.`);\n        }\n        if (workdirName?.includes('/') || workdirName === '..' || workdirName === '.') {\n            throw new Error('workdirName should be a valid folder name');\n        }\n        // signal that boot was called to auth module as calling auth.init after boot is likely incorrect\n        authState.bootCalled = true;\n        // try to \"acquire the lock\", i.e. wait for any ongoing boot request to finish\n        while (bootPromise) {\n            await bootPromise;\n        }\n        if (WebContainer._instance) {\n            throw new Error('Only a single WebContainer instance can be booted');\n        }\n        const instancePromise = unsynchronizedBoot(options);\n        // the \"lock\" is a promise for the ongoing boot that never fails\n        bootPromise = instancePromise.catch(() => { });\n        try {\n            const instance = await instancePromise;\n            WebContainer._instance = instance;\n            return instance;\n        }\n        finally {\n            // release the \"lock\"\n            bootPromise = null;\n        }\n    }\n}\n/**\n * Configure an API key to be used for this instance of WebContainer.\n *\n * @param key WebContainer API key.\n */\nexport function configureAPIKey(key) {\n    if (authState.bootCalled) {\n        throw new Error('`configureAPIKey` should always be called before `WebContainer.boot`');\n    }\n    iframeSettings.setQueryParam('client_id', key);\n}\n// #region internal\nexport class WebContainerInternal {\n    _instance;\n    constructor(\n    /** @internal */\n    _instance) {\n        this._instance = _instance;\n    }\n    watchPaths(options, cb) {\n        const { listener, subscribe } = syncSubscription(cb);\n        return subscribe(this._instance.watchPaths(options, Comlink.proxy(listener)));\n    }\n    getProcesses() {\n        return this._instance.getProcesses();\n    }\n    onProcessesRemove(cb) {\n        const { listener, subscribe } = syncSubscription(cb);\n        return subscribe(this._instance.onProcessesRemove(Comlink.proxy(listener)));\n    }\n    serialize(path, options) {\n        return this._instance.serialize(path, options);\n    }\n    setCORSProxy(options) {\n        return this._instance.setCORSProxy(options);\n    }\n    setCORSAuthToken(token) {\n        return this._instance.setCORSAuthToken(token);\n    }\n}\nconst DIR_ENTRY_TYPE_FILE = 1;\nconst DIR_ENTRY_TYPE_DIR = 2;\n/**\n * @internal\n */\nclass DirEntImpl {\n    name;\n    _type;\n    constructor(name, _type) {\n        this.name = name;\n        this._type = _type;\n    }\n    isFile() {\n        return this._type === DIR_ENTRY_TYPE_FILE;\n    }\n    isDirectory() {\n        return this._type === DIR_ENTRY_TYPE_DIR;\n    }\n}\nclass FSWatcher {\n    _apiClient;\n    _path;\n    _options;\n    _listener;\n    _wrappedListener;\n    _watcher;\n    _closed = false;\n    constructor(_apiClient, _path, _options, _listener) {\n        this._apiClient = _apiClient;\n        this._path = _path;\n        this._options = _options;\n        this._listener = _listener;\n        this._apiClient._watchers.add(this);\n        this._wrappedListener = (event, filename) => {\n            if (this._listener && !this._closed) {\n                this._listener(event, filename);\n            }\n        };\n        this._apiClient._fs\n            .watch(this._path, this._options, proxyListener(this._wrappedListener))\n            .then((_watcher) => {\n            this._watcher = _watcher;\n            if (this._closed) {\n                this._teardown();\n            }\n        })\n            .catch(console.error);\n    }\n    close() {\n        if (!this._closed) {\n            this._closed = true;\n            this._apiClient._watchers.delete(this);\n            this._teardown();\n        }\n    }\n    /**\n     * @internal\n     */\n    _teardown() {\n        this._watcher?.close().finally(() => {\n            this._watcher?.[Comlink.releaseProxy]();\n        });\n    }\n}\n/**\n * @internal\n */\nclass WebContainerProcessImpl {\n    output;\n    input;\n    exit;\n    _process;\n    stdout;\n    stderr;\n    constructor(process, output, stdout, stderr) {\n        this.output = output;\n        this._process = process;\n        this.input = new WritableStream({\n            write: (data) => {\n                // this promise is not supposed to fail anyway\n                this._getProcess()\n                    ?.write(data)\n                    .catch(() => { });\n            },\n        });\n        this.exit = this._onExit();\n        // #region internal\n        // this cast is only needed to make stable builds happy, where those fields are unexposed\n        // #endregion\n        this.stdout = stdout;\n        this.stderr = stderr;\n    }\n    kill() {\n        this._getProcess()?.kill();\n    }\n    resize(dimensions) {\n        this._getProcess()?.resize(dimensions);\n    }\n    async _onExit() {\n        try {\n            return await this._process.onExit;\n        }\n        finally {\n            this._process?.[Comlink.releaseProxy]();\n            this._process = null;\n        }\n    }\n    _getProcess() {\n        if (this._process == null) {\n            console.warn('This process already exited');\n        }\n        return this._process;\n    }\n}\n/**\n * @internal\n */\nclass FileSystemAPIClient {\n    _fs;\n    _watchers = new Set([]);\n    constructor(fs) {\n        this._fs = fs;\n    }\n    rm(...args) {\n        return this._fs.rm(...args);\n    }\n    async readFile(path, encoding) {\n        return await this._fs.readFile(path, encoding);\n    }\n    async rename(oldPath, newPath) {\n        return await this._fs.rename(oldPath, newPath);\n    }\n    async writeFile(path, data, options) {\n        if (data instanceof Uint8Array) {\n            const buffer = data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n            data = Comlink.transfer(new Uint8Array(buffer), [buffer]);\n        }\n        await this._fs.writeFile(path, data, options);\n    }\n    async readdir(path, options) {\n        const result = await this._fs.readdir(path, options);\n        if (isStringArray(result)) {\n            return result;\n        }\n        if (isTypedArrayCollection(result)) {\n            return result;\n        }\n        const entries = result.map((entry) => new DirEntImpl(entry.name, entry['Symbol(type)']));\n        return entries;\n    }\n    async mkdir(path, options) {\n        return await this._fs.mkdir(path, options);\n    }\n    watch(path, options, listener) {\n        if (typeof options === 'function') {\n            listener = options;\n            options = null;\n        }\n        return new FSWatcher(this, path, options, listener);\n    }\n    /**\n     * @internal\n     */\n    _teardown() {\n        this._fs[Comlink.releaseProxy]();\n        for (const watcherWrapper of this._watchers) {\n            watcherWrapper.close();\n        }\n    }\n}\nasync function unsynchronizedBoot(options) {\n    const { serverPromise } = serverFactory(options);\n    const server = await serverPromise;\n    const instance = await server.build({\n        host: window.location.host,\n        version: \"1.5.1-internal.7\",\n        workdirName: options.workdirName,\n        forwardPreviewErrors: options.forwardPreviewErrors,\n    });\n    const fs = await instance.fs();\n    const runtimeInfo = await instance.runtimeInfo();\n    return new WebContainer(instance, fs, runtimeInfo);\n}\nfunction binaryListener(listener) {\n    if (listener == null) {\n        return undefined;\n    }\n    return (data) => {\n        if (data instanceof Uint8Array) {\n            listener(decoder.decode(data));\n        }\n        else if (data == null) {\n            listener(null);\n        }\n    };\n}\nfunction proxyListener(listener) {\n    if (listener == null) {\n        return undefined;\n    }\n    return Comlink.proxy(listener);\n}\nfunction serverFactory(options) {\n    if (cachedServerPromise != null) {\n        if (options.coep !== cachedBootOptions.coep) {\n            console.warn(`Attempting to boot WebContainer with 'coep: ${options.coep}'`);\n            console.warn(`First boot had 'coep: ${cachedBootOptions.coep}', new settings will not take effect!`);\n        }\n        return { serverPromise: cachedServerPromise };\n    }\n    const iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n    iframe.setAttribute('allow', 'cross-origin-isolated');\n    const url = iframeSettings.url;\n    if (options.coep) {\n        url.searchParams.set('coep', options.coep);\n    }\n    iframe.src = url.toString();\n    const { origin } = url;\n    cachedBootOptions = { ...options };\n    cachedServerPromise = new Promise((resolve) => {\n        const onMessage = (event) => {\n            if (event.origin !== origin) {\n                return;\n            }\n            const { data } = event;\n            if (data.type === 'init') {\n                resolve(Comlink.wrap(event.ports[0]));\n                return;\n            }\n            if (data.type === 'warning') {\n                console[data.level].call(console, data.message);\n                return;\n            }\n        };\n        window.addEventListener('message', onMessage);\n    });\n    document.body.insertBefore(iframe, null);\n    return { serverPromise: cachedServerPromise };\n}\nfunction isStringArray(list) {\n    return typeof list[0] === 'string';\n}\nfunction isTypedArrayCollection(list) {\n    return list[0] instanceof Uint8Array;\n}\nfunction streamWithPush() {\n    let controller = null;\n    const stream = new ReadableStream({\n        start(controller_) {\n            controller = controller_;\n        },\n    });\n    const push = (item) => {\n        if (item != null) {\n            controller?.enqueue(item);\n        }\n        else {\n            controller?.close();\n            controller = null;\n        }\n    };\n    return { stream, push };\n}\nfunction syncSubscription(listener) {\n    let stopped = false;\n    let unsubscribe = () => { };\n    const wrapped = ((...args) => {\n        if (stopped) {\n            return;\n        }\n        listener(...args);\n    });\n    return {\n        subscribe(promise) {\n            promise.then((unsubscribe_) => {\n                unsubscribe = unsubscribe_;\n                if (stopped) {\n                    unsubscribe();\n                }\n            });\n            return () => {\n                stopped = true;\n                unsubscribe();\n            };\n        },\n        listener: wrapped,\n    };\n}\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/lib/webcontainer/index.ts\"\n);\nimport.meta.hot.lastModified = \"1737602845912.6218\";\n}\n// REMIX HMR END\n\nimport { WebContainer } from '@webcontainer/api';\nimport { WORK_DIR_NAME } from '~/utils/constants';\n\ninterface WebContainerContext {\n  loaded: boolean;\n}\n\nexport const webcontainerContext: WebContainerContext = import.meta.hot?.data.webcontainerContext ?? {\n  loaded: false,\n};\n\nif (import.meta.hot) {\n  import.meta.hot.data.webcontainerContext = webcontainerContext;\n}\n\nexport let webcontainer: Promise<WebContainer> = new Promise(() => {\n  // noop for ssr\n});\n\nif (!import.meta.env.SSR) {\n  webcontainer =\n    import.meta.hot?.data.webcontainer ??\n    Promise.resolve()\n      .then(() => {\n        return WebContainer.boot({ workdirName: WORK_DIR_NAME });\n      })\n      .then((webcontainer) => {\n        webcontainerContext.loaded = true;\n        return webcontainer;\n      });\n\n  if (import.meta.hot) {\n    import.meta.hot.data.webcontainer = webcontainer;\n  }\n}\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/lib/stores/previews.ts\"\n);\nimport.meta.hot.lastModified = \"1737602845912.0254\";\n}\n// REMIX HMR END\n\nimport type { WebContainer } from '@webcontainer/api';\nimport { atom } from 'nanostores';\n\nexport interface PreviewInfo {\n  port: number;\n  ready: boolean;\n  baseUrl: string;\n}\n\nexport class PreviewsStore {\n  #availablePreviews = new Map<number, PreviewInfo>();\n  #webcontainer: Promise<WebContainer>;\n\n  previews = atom<PreviewInfo[]>([]);\n\n  constructor(webcontainerPromise: Promise<WebContainer>) {\n    this.#webcontainer = webcontainerPromise;\n\n    this.#init();\n  }\n\n  async #init() {\n    const webcontainer = await this.#webcontainer;\n\n    webcontainer.on('port', (port, type, url) => {\n      let previewInfo = this.#availablePreviews.get(port);\n\n      if (type === 'close' && previewInfo) {\n        this.#availablePreviews.delete(port);\n        this.previews.set(this.previews.get().filter((preview) => preview.port !== port));\n\n        return;\n      }\n\n      const previews = this.previews.get();\n\n      if (!previewInfo) {\n        previewInfo = { port, ready: type === 'open', baseUrl: url };\n        this.#availablePreviews.set(port, previewInfo);\n        previews.push(previewInfo);\n      }\n\n      previewInfo.ready = type === 'open';\n      previewInfo.baseUrl = url;\n\n      this.previews.set([...previews]);\n    });\n  }\n}\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/utils/promises.ts\"\n);\nimport.meta.hot.lastModified = \"1737602845916.0728\";\n}\n// REMIX HMR END\n\nexport function withResolvers<T>(): PromiseWithResolvers<T> {\n  if (typeof Promise.withResolvers === 'function') {\n    return Promise.withResolvers();\n  }\n\n  let resolve!: (value: T | PromiseLike<T>) => void;\n  let reject!: (reason?: any) => void;\n\n  const promise = new Promise<T>((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n\n  return {\n    resolve,\n    reject,\n    promise,\n  };\n}\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/utils/shell.ts\"\n);\nimport.meta.hot.lastModified = \"1737602845916.2407\";\n}\n// REMIX HMR END\n\nimport type { WebContainer } from '@webcontainer/api';\nimport type { ITerminal } from '~/types/terminal';\nimport { withResolvers } from './promises';\n\nexport async function newShellProcess(webcontainer: WebContainer, terminal: ITerminal) {\n  const args: string[] = [];\n\n  // we spawn a JSH process with a fallback cols and rows in case the process is not attached yet to a visible terminal\n  const process = await webcontainer.spawn('/bin/jsh', ['--osc', ...args], {\n    terminal: {\n      cols: terminal.cols ?? 80,\n      rows: terminal.rows ?? 15,\n    },\n  });\n\n  const input = process.input.getWriter();\n  const output = process.output;\n\n  const jshReady = withResolvers<void>();\n\n  let isInteractive = false;\n\n  output.pipeTo(\n    new WritableStream({\n      write(data) {\n        if (!isInteractive) {\n          const [, osc] = data.match(/\\x1b\\]654;([^\\x07]+)\\x07/) || [];\n\n          if (osc === 'interactive') {\n            // wait until we see the interactive OSC\n            isInteractive = true;\n\n            jshReady.resolve();\n          }\n        }\n\n        terminal.write(data);\n      },\n    }),\n  );\n\n  terminal.onData((data) => {\n    if (isInteractive) {\n      input.write(data);\n    }\n  });\n\n  await jshReady.promise;\n\n  return process;\n}\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/utils/terminal.ts\"\n);\nimport.meta.hot.lastModified = \"1737602845916.416\";\n}\n// REMIX HMR END\n\nconst reset = '\\x1b[0m';\n\nexport const escapeCodes = {\n  reset,\n  clear: '\\x1b[g',\n  red: '\\x1b[1;31m',\n};\n\nexport const coloredText = {\n  red: (text: string) => `${escapeCodes.red}${text}${reset}`,\n};\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/lib/stores/terminal.ts\"\n);\nimport.meta.hot.lastModified = \"1737602845912.2175\";\n}\n// REMIX HMR END\n\nimport type { WebContainer, WebContainerProcess } from '@webcontainer/api';\nimport { atom, type WritableAtom } from 'nanostores';\nimport type { ITerminal } from '~/types/terminal';\nimport { newShellProcess } from '~/utils/shell';\nimport { coloredText } from '~/utils/terminal';\n\nexport class TerminalStore {\n  #webcontainer: Promise<WebContainer>;\n  #terminals: Array<{ terminal: ITerminal; process: WebContainerProcess }> = [];\n\n  showTerminal: WritableAtom<boolean> = import.meta.hot?.data.showTerminal ?? atom(false);\n\n  constructor(webcontainerPromise: Promise<WebContainer>) {\n    this.#webcontainer = webcontainerPromise;\n\n    if (import.meta.hot) {\n      import.meta.hot.data.showTerminal = this.showTerminal;\n    }\n  }\n\n  toggleTerminal(value?: boolean) {\n    this.showTerminal.set(value !== undefined ? value : !this.showTerminal.get());\n  }\n\n  async attachTerminal(terminal: ITerminal) {\n    try {\n      const shellProcess = await newShellProcess(await this.#webcontainer, terminal);\n      this.#terminals.push({ terminal, process: shellProcess });\n    } catch (error: any) {\n      terminal.write(coloredText.red('Failed to spawn shell\\n\\n') + error.message);\n      return;\n    }\n  }\n\n  onTerminalResize(cols: number, rows: number) {\n    for (const { process } of this.#terminals) {\n      process.resize({ cols, rows });\n    }\n  }\n}\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/lib/stores/workbench.ts\"\n);\nimport.meta.hot.lastModified = \"1737602845912.4082\";\n}\n// REMIX HMR END\n\nimport { atom, map, type MapStore, type ReadableAtom, type WritableAtom } from 'nanostores';\nimport type { EditorDocument, ScrollPosition } from '~/components/editor/codemirror/CodeMirrorEditor';\nimport { ActionRunner } from '~/lib/runtime/action-runner';\nimport type { ActionCallbackData, ArtifactCallbackData } from '~/lib/runtime/message-parser';\nimport { webcontainer } from '~/lib/webcontainer';\nimport type { ITerminal } from '~/types/terminal';\nimport { unreachable } from '~/utils/unreachable';\nimport { EditorStore } from './editor';\nimport { FilesStore, type FileMap } from './files';\nimport { PreviewsStore } from './previews';\nimport { TerminalStore } from './terminal';\n\nexport interface ArtifactState {\n  id: string;\n  title: string;\n  closed: boolean;\n  runner: ActionRunner;\n}\n\nexport type ArtifactUpdateState = Pick<ArtifactState, 'title' | 'closed'>;\n\ntype Artifacts = MapStore<Record<string, ArtifactState>>;\n\nexport type WorkbenchViewType = 'code' | 'preview';\n\nexport class WorkbenchStore {\n  #previewsStore = new PreviewsStore(webcontainer);\n  #filesStore = new FilesStore(webcontainer);\n  #editorStore = new EditorStore(this.#filesStore);\n  #terminalStore = new TerminalStore(webcontainer);\n\n  artifacts: Artifacts = import.meta.hot?.data.artifacts ?? map({});\n\n  showWorkbench: WritableAtom<boolean> = import.meta.hot?.data.showWorkbench ?? atom(false);\n  currentView: WritableAtom<WorkbenchViewType> = import.meta.hot?.data.currentView ?? atom('code');\n  unsavedFiles: WritableAtom<Set<string>> = import.meta.hot?.data.unsavedFiles ?? atom(new Set<string>());\n  modifiedFiles = new Set<string>();\n  artifactIdList: string[] = [];\n\n  constructor() {\n    if (import.meta.hot) {\n      import.meta.hot.data.artifacts = this.artifacts;\n      import.meta.hot.data.unsavedFiles = this.unsavedFiles;\n      import.meta.hot.data.showWorkbench = this.showWorkbench;\n      import.meta.hot.data.currentView = this.currentView;\n    }\n  }\n\n  get previews() {\n    return this.#previewsStore.previews;\n  }\n\n  get files() {\n    return this.#filesStore.files;\n  }\n\n  get currentDocument(): ReadableAtom<EditorDocument | undefined> {\n    return this.#editorStore.currentDocument;\n  }\n\n  get selectedFile(): ReadableAtom<string | undefined> {\n    return this.#editorStore.selectedFile;\n  }\n\n  get firstArtifact(): ArtifactState | undefined {\n    return this.#getArtifact(this.artifactIdList[0]);\n  }\n\n  get filesCount(): number {\n    return this.#filesStore.filesCount;\n  }\n\n  get showTerminal() {\n    return this.#terminalStore.showTerminal;\n  }\n\n  toggleTerminal(value?: boolean) {\n    this.#terminalStore.toggleTerminal(value);\n  }\n\n  attachTerminal(terminal: ITerminal) {\n    this.#terminalStore.attachTerminal(terminal);\n  }\n\n  onTerminalResize(cols: number, rows: number) {\n    this.#terminalStore.onTerminalResize(cols, rows);\n  }\n\n  setDocuments(files: FileMap) {\n    this.#editorStore.setDocuments(files);\n\n    if (this.#filesStore.filesCount > 0 && this.currentDocument.get() === undefined) {\n      // we find the first file and select it\n      for (const [filePath, dirent] of Object.entries(files)) {\n        if (dirent?.type === 'file') {\n          this.setSelectedFile(filePath);\n          break;\n        }\n      }\n    }\n  }\n\n  setShowWorkbench(show: boolean) {\n    this.showWorkbench.set(show);\n  }\n\n  setCurrentDocumentContent(newContent: string) {\n    const filePath = this.currentDocument.get()?.filePath;\n\n    if (!filePath) {\n      return;\n    }\n\n    const originalContent = this.#filesStore.getFile(filePath)?.content;\n    const unsavedChanges = originalContent !== undefined && originalContent !== newContent;\n\n    this.#editorStore.updateFile(filePath, newContent);\n\n    const currentDocument = this.currentDocument.get();\n\n    if (currentDocument) {\n      const previousUnsavedFiles = this.unsavedFiles.get();\n\n      if (unsavedChanges && previousUnsavedFiles.has(currentDocument.filePath)) {\n        return;\n      }\n\n      const newUnsavedFiles = new Set(previousUnsavedFiles);\n\n      if (unsavedChanges) {\n        newUnsavedFiles.add(currentDocument.filePath);\n      } else {\n        newUnsavedFiles.delete(currentDocument.filePath);\n      }\n\n      this.unsavedFiles.set(newUnsavedFiles);\n    }\n  }\n\n  setCurrentDocumentScrollPosition(position: ScrollPosition) {\n    const editorDocument = this.currentDocument.get();\n\n    if (!editorDocument) {\n      return;\n    }\n\n    const { filePath } = editorDocument;\n\n    this.#editorStore.updateScrollPosition(filePath, position);\n  }\n\n  setSelectedFile(filePath: string | undefined) {\n    this.#editorStore.setSelectedFile(filePath);\n  }\n\n  async saveFile(filePath: string) {\n    const documents = this.#editorStore.documents.get();\n    const document = documents[filePath];\n\n    if (document === undefined) {\n      return;\n    }\n\n    await this.#filesStore.saveFile(filePath, document.value);\n\n    const newUnsavedFiles = new Set(this.unsavedFiles.get());\n    newUnsavedFiles.delete(filePath);\n\n    this.unsavedFiles.set(newUnsavedFiles);\n  }\n\n  async saveCurrentDocument() {\n    const currentDocument = this.currentDocument.get();\n\n    if (currentDocument === undefined) {\n      return;\n    }\n\n    await this.saveFile(currentDocument.filePath);\n  }\n\n  resetCurrentDocument() {\n    const currentDocument = this.currentDocument.get();\n\n    if (currentDocument === undefined) {\n      return;\n    }\n\n    const { filePath } = currentDocument;\n    const file = this.#filesStore.getFile(filePath);\n\n    if (!file) {\n      return;\n    }\n\n    this.setCurrentDocumentContent(file.content);\n  }\n\n  async saveAllFiles() {\n    for (const filePath of this.unsavedFiles.get()) {\n      await this.saveFile(filePath);\n    }\n  }\n\n  getFileModifcations() {\n    return this.#filesStore.getFileModifications();\n  }\n\n  resetAllFileModifications() {\n    this.#filesStore.resetFileModifications();\n  }\n\n  abortAllActions() {\n    // TODO: what do we wanna do and how do we wanna recover from this?\n  }\n\n  addArtifact({ messageId, title, id }: ArtifactCallbackData) {\n    const artifact = this.#getArtifact(messageId);\n\n    if (artifact) {\n      return;\n    }\n\n    if (!this.artifactIdList.includes(messageId)) {\n      this.artifactIdList.push(messageId);\n    }\n\n    this.artifacts.setKey(messageId, {\n      id,\n      title,\n      closed: false,\n      runner: new ActionRunner(webcontainer),\n    });\n  }\n\n  updateArtifact({ messageId }: ArtifactCallbackData, state: Partial<ArtifactUpdateState>) {\n    const artifact = this.#getArtifact(messageId);\n\n    if (!artifact) {\n      return;\n    }\n\n    this.artifacts.setKey(messageId, { ...artifact, ...state });\n  }\n\n  async addAction(data: ActionCallbackData) {\n    const { messageId } = data;\n\n    const artifact = this.#getArtifact(messageId);\n\n    if (!artifact) {\n      unreachable('Artifact not found');\n    }\n\n    artifact.runner.addAction(data);\n  }\n\n  async runAction(data: ActionCallbackData) {\n    const { messageId } = data;\n\n    const artifact = this.#getArtifact(messageId);\n\n    if (!artifact) {\n      unreachable('Artifact not found');\n    }\n\n    artifact.runner.runAction(data);\n  }\n\n  #getArtifact(id: string) {\n    const artifacts = this.artifacts.get();\n    return artifacts[id];\n  }\n}\n\nexport const workbenchStore = new WorkbenchStore();\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/workbench/PortDropdown.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/workbench/PortDropdown.tsx\");\n  import.meta.hot.lastModified = \"1738201815622.2751\";\n}\n// REMIX HMR END\n\nimport { memo, useEffect, useRef } from 'react';\nimport { IconButton } from '~/components/ui/IconButton';\nexport const PortDropdown = _s(memo(_c = _s(({\n  activePreviewIndex,\n  setActivePreviewIndex,\n  isDropdownOpen,\n  setIsDropdownOpen,\n  setHasSelectedPreview,\n  previews\n}) => {\n  _s();\n  const dropdownRef = useRef(null);\n\n  // sort previews, preserving original index\n  const sortedPreviews = previews.map((previewInfo, index) => ({\n    ...previewInfo,\n    index\n  })).sort((a, b) => a.port - b.port);\n\n  // close dropdown if user clicks outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsDropdownOpen(false);\n      }\n    };\n    if (isDropdownOpen) {\n      window.addEventListener('mousedown', handleClickOutside);\n    } else {\n      window.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      window.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isDropdownOpen]);\n  return <div className=\"relative z-port-dropdown\" ref={dropdownRef}>\n        <IconButton icon=\"i-ph:plug\" onClick={() => setIsDropdownOpen(!isDropdownOpen)} />\n        {isDropdownOpen && <div className=\"absolute right-0 mt-2 bg-gobezeai-elements-background-depth-2 border border-gobezeai-elements-borderColor rounded shadow-sm min-w-[140px] dropdown-animation\">\n            <div className=\"px-4 py-2 border-b border-gobezeai-elements-borderColor text-sm font-semibold text-gobezeai-elements-textPrimary\">\n              Ports\n            </div>\n            {sortedPreviews.map(preview => <div key={preview.port} className=\"flex items-center px-4 py-2 cursor-pointer hover:bg-gobezeai-elements-item-backgroundActive\" onClick={() => {\n        setActivePreviewIndex(preview.index);\n        setIsDropdownOpen(false);\n        setHasSelectedPreview(true);\n      }}>\n                <span className={activePreviewIndex === preview.index ? 'text-gobezeai-elements-item-contentAccent' : 'text-gobezeai-elements-item-contentDefault group-hover:text-gobezeai-elements-item-contentActive'}>\n                  {preview.port}\n                </span>\n              </div>)}\n          </div>}\n      </div>;\n}, \"lBksDI189chlgqHe47LAOFZSkUw=\")), \"lBksDI189chlgqHe47LAOFZSkUw=\");\n_c2 = PortDropdown;\nvar _c, _c2;\n$RefreshReg$(_c, \"PortDropdown$memo\");\n$RefreshReg$(_c2, \"PortDropdown\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "webcontainer", "reset", "PreviewMessageType", "webcontainer", "webcontainer", "webcontainer", "document", "import_react", "import_jsx_dev_runtime", "_c", "_c2", "import_jsx_dev_runtime", "_s", "_c", "reloadPreview", "_c2"]
}
